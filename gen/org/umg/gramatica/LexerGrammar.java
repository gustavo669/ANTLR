// Generated from C:/Users/barre/IdeaProjects/ANTLR/src/main/java/org/umg/gramatica/LexerGrammar.g4 by ANTLR 4.13.2
package org.umg.gramatica;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class LexerGrammar extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		TITAN=1, LEGION=2, ORDEN=3, ATAQUE=4, HUMANIDAD=5, MURO=6, RECONOCER=7, 
		TROPAS=8, MULT=9, DIV=10, ADD=11, SUB=12, MOD=13, PUNTAZOS=14, RETIRADA=15, 
		MAYOR_QUE=16, MENOR_QUE=17, IGUALDAD=18, DESIGUALDAD=19, MAYOR_IGUAL=20, 
		MENOR_IGUAL=21, LPAREN=22, RPAREN=23, LBRACE=24, RBRACE=25, SEMI=26, COMA=27, 
		PUNTO=28, ASIGNACION=29, NUMERO=30, GRITO=31, SCOUT=32, INFORME=33, INFORME_SECRETO=34, 
		CAMUFLAJE=35, ERROR_TITAN=36;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"TITAN", "LEGION", "ORDEN", "ATAQUE", "HUMANIDAD", "MURO", "RECONOCER", 
			"TROPAS", "MULT", "DIV", "ADD", "SUB", "MOD", "PUNTAZOS", "RETIRADA", 
			"MAYOR_QUE", "MENOR_QUE", "IGUALDAD", "DESIGUALDAD", "MAYOR_IGUAL", "MENOR_IGUAL", 
			"LPAREN", "RPAREN", "LBRACE", "RBRACE", "SEMI", "COMA", "PUNTO", "ASIGNACION", 
			"NUMERO", "GRITO", "SCOUT", "INFORME", "INFORME_SECRETO", "CAMUFLAJE", 
			"ERROR_TITAN"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'titan'", "'legion'", "'orden'", "'ataque'", "'humanidad'", "'muro'", 
			"'reconocer'", "'tropas'", "'*'", "'/'", "'+'", "'-'", "'%'", "'++'", 
			"'--'", "'>'", "'<'", "'=='", "'!='", "'>='", "'<='", "'('", "')'", "'{'", 
			"'}'", "';'", "','", "'.'", "'='"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "TITAN", "LEGION", "ORDEN", "ATAQUE", "HUMANIDAD", "MURO", "RECONOCER", 
			"TROPAS", "MULT", "DIV", "ADD", "SUB", "MOD", "PUNTAZOS", "RETIRADA", 
			"MAYOR_QUE", "MENOR_QUE", "IGUALDAD", "DESIGUALDAD", "MAYOR_IGUAL", "MENOR_IGUAL", 
			"LPAREN", "RPAREN", "LBRACE", "RBRACE", "SEMI", "COMA", "PUNTO", "ASIGNACION", 
			"NUMERO", "GRITO", "SCOUT", "INFORME", "INFORME_SECRETO", "CAMUFLAJE", 
			"ERROR_TITAN"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public LexerGrammar(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "LexerGrammar.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000$\u00f2\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001"+
		"\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001"+
		"\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001"+
		"\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001"+
		"\u0004\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005\u0001"+
		"\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001"+
		"\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001"+
		"\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001"+
		"\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001\n\u0001\u000b\u0001"+
		"\u000b\u0001\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e"+
		"\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0011"+
		"\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0013"+
		"\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0015"+
		"\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0018"+
		"\u0001\u0018\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001\u001b"+
		"\u0001\u001b\u0001\u001c\u0001\u001c\u0001\u001d\u0004\u001d\u00b5\b\u001d"+
		"\u000b\u001d\f\u001d\u00b6\u0001\u001d\u0001\u001d\u0004\u001d\u00bb\b"+
		"\u001d\u000b\u001d\f\u001d\u00bc\u0003\u001d\u00bf\b\u001d\u0001\u001e"+
		"\u0001\u001e\u0005\u001e\u00c3\b\u001e\n\u001e\f\u001e\u00c6\t\u001e\u0001"+
		"\u001e\u0001\u001e\u0001\u001f\u0001\u001f\u0005\u001f\u00cc\b\u001f\n"+
		"\u001f\f\u001f\u00cf\t\u001f\u0001 \u0001 \u0001 \u0001 \u0005 \u00d5"+
		"\b \n \f \u00d8\t \u0001 \u0001 \u0001!\u0001!\u0001!\u0001!\u0005!\u00e0"+
		"\b!\n!\f!\u00e3\t!\u0001!\u0001!\u0001!\u0001!\u0001!\u0001\"\u0004\""+
		"\u00eb\b\"\u000b\"\f\"\u00ec\u0001\"\u0001\"\u0001#\u0001#\u0002\u00c4"+
		"\u00e1\u0000$\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005"+
		"\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019"+
		"\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015"+
		"+\u0016-\u0017/\u00181\u00193\u001a5\u001b7\u001c9\u001d;\u001e=\u001f"+
		"? A!C\"E#G$\u0001\u0000\u0005\u0001\u000009\u0003\u0000AZ__az\u0004\u0000"+
		"09AZ__az\u0002\u0000\n\n\r\r\u0003\u0000\t\n\r\r  \u00f9\u0000\u0001\u0001"+
		"\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001"+
		"\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000"+
		"\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000"+
		"\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000"+
		"\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000"+
		"\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000"+
		"\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000"+
		"\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000"+
		"\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'"+
		"\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000"+
		"\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000"+
		"\u00001\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005"+
		"\u0001\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000"+
		"\u0000\u0000\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000"+
		"\u0000?\u0001\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000C"+
		"\u0001\u0000\u0000\u0000\u0000E\u0001\u0000\u0000\u0000\u0000G\u0001\u0000"+
		"\u0000\u0000\u0001I\u0001\u0000\u0000\u0000\u0003O\u0001\u0000\u0000\u0000"+
		"\u0005V\u0001\u0000\u0000\u0000\u0007\\\u0001\u0000\u0000\u0000\tc\u0001"+
		"\u0000\u0000\u0000\u000bm\u0001\u0000\u0000\u0000\rr\u0001\u0000\u0000"+
		"\u0000\u000f|\u0001\u0000\u0000\u0000\u0011\u0083\u0001\u0000\u0000\u0000"+
		"\u0013\u0085\u0001\u0000\u0000\u0000\u0015\u0087\u0001\u0000\u0000\u0000"+
		"\u0017\u0089\u0001\u0000\u0000\u0000\u0019\u008b\u0001\u0000\u0000\u0000"+
		"\u001b\u008d\u0001\u0000\u0000\u0000\u001d\u0090\u0001\u0000\u0000\u0000"+
		"\u001f\u0093\u0001\u0000\u0000\u0000!\u0095\u0001\u0000\u0000\u0000#\u0097"+
		"\u0001\u0000\u0000\u0000%\u009a\u0001\u0000\u0000\u0000\'\u009d\u0001"+
		"\u0000\u0000\u0000)\u00a0\u0001\u0000\u0000\u0000+\u00a3\u0001\u0000\u0000"+
		"\u0000-\u00a5\u0001\u0000\u0000\u0000/\u00a7\u0001\u0000\u0000\u00001"+
		"\u00a9\u0001\u0000\u0000\u00003\u00ab\u0001\u0000\u0000\u00005\u00ad\u0001"+
		"\u0000\u0000\u00007\u00af\u0001\u0000\u0000\u00009\u00b1\u0001\u0000\u0000"+
		"\u0000;\u00b4\u0001\u0000\u0000\u0000=\u00c0\u0001\u0000\u0000\u0000?"+
		"\u00c9\u0001\u0000\u0000\u0000A\u00d0\u0001\u0000\u0000\u0000C\u00db\u0001"+
		"\u0000\u0000\u0000E\u00ea\u0001\u0000\u0000\u0000G\u00f0\u0001\u0000\u0000"+
		"\u0000IJ\u0005t\u0000\u0000JK\u0005i\u0000\u0000KL\u0005t\u0000\u0000"+
		"LM\u0005a\u0000\u0000MN\u0005n\u0000\u0000N\u0002\u0001\u0000\u0000\u0000"+
		"OP\u0005l\u0000\u0000PQ\u0005e\u0000\u0000QR\u0005g\u0000\u0000RS\u0005"+
		"i\u0000\u0000ST\u0005o\u0000\u0000TU\u0005n\u0000\u0000U\u0004\u0001\u0000"+
		"\u0000\u0000VW\u0005o\u0000\u0000WX\u0005r\u0000\u0000XY\u0005d\u0000"+
		"\u0000YZ\u0005e\u0000\u0000Z[\u0005n\u0000\u0000[\u0006\u0001\u0000\u0000"+
		"\u0000\\]\u0005a\u0000\u0000]^\u0005t\u0000\u0000^_\u0005a\u0000\u0000"+
		"_`\u0005q\u0000\u0000`a\u0005u\u0000\u0000ab\u0005e\u0000\u0000b\b\u0001"+
		"\u0000\u0000\u0000cd\u0005h\u0000\u0000de\u0005u\u0000\u0000ef\u0005m"+
		"\u0000\u0000fg\u0005a\u0000\u0000gh\u0005n\u0000\u0000hi\u0005i\u0000"+
		"\u0000ij\u0005d\u0000\u0000jk\u0005a\u0000\u0000kl\u0005d\u0000\u0000"+
		"l\n\u0001\u0000\u0000\u0000mn\u0005m\u0000\u0000no\u0005u\u0000\u0000"+
		"op\u0005r\u0000\u0000pq\u0005o\u0000\u0000q\f\u0001\u0000\u0000\u0000"+
		"rs\u0005r\u0000\u0000st\u0005e\u0000\u0000tu\u0005c\u0000\u0000uv\u0005"+
		"o\u0000\u0000vw\u0005n\u0000\u0000wx\u0005o\u0000\u0000xy\u0005c\u0000"+
		"\u0000yz\u0005e\u0000\u0000z{\u0005r\u0000\u0000{\u000e\u0001\u0000\u0000"+
		"\u0000|}\u0005t\u0000\u0000}~\u0005r\u0000\u0000~\u007f\u0005o\u0000\u0000"+
		"\u007f\u0080\u0005p\u0000\u0000\u0080\u0081\u0005a\u0000\u0000\u0081\u0082"+
		"\u0005s\u0000\u0000\u0082\u0010\u0001\u0000\u0000\u0000\u0083\u0084\u0005"+
		"*\u0000\u0000\u0084\u0012\u0001\u0000\u0000\u0000\u0085\u0086\u0005/\u0000"+
		"\u0000\u0086\u0014\u0001\u0000\u0000\u0000\u0087\u0088\u0005+\u0000\u0000"+
		"\u0088\u0016\u0001\u0000\u0000\u0000\u0089\u008a\u0005-\u0000\u0000\u008a"+
		"\u0018\u0001\u0000\u0000\u0000\u008b\u008c\u0005%\u0000\u0000\u008c\u001a"+
		"\u0001\u0000\u0000\u0000\u008d\u008e\u0005+\u0000\u0000\u008e\u008f\u0005"+
		"+\u0000\u0000\u008f\u001c\u0001\u0000\u0000\u0000\u0090\u0091\u0005-\u0000"+
		"\u0000\u0091\u0092\u0005-\u0000\u0000\u0092\u001e\u0001\u0000\u0000\u0000"+
		"\u0093\u0094\u0005>\u0000\u0000\u0094 \u0001\u0000\u0000\u0000\u0095\u0096"+
		"\u0005<\u0000\u0000\u0096\"\u0001\u0000\u0000\u0000\u0097\u0098\u0005"+
		"=\u0000\u0000\u0098\u0099\u0005=\u0000\u0000\u0099$\u0001\u0000\u0000"+
		"\u0000\u009a\u009b\u0005!\u0000\u0000\u009b\u009c\u0005=\u0000\u0000\u009c"+
		"&\u0001\u0000\u0000\u0000\u009d\u009e\u0005>\u0000\u0000\u009e\u009f\u0005"+
		"=\u0000\u0000\u009f(\u0001\u0000\u0000\u0000\u00a0\u00a1\u0005<\u0000"+
		"\u0000\u00a1\u00a2\u0005=\u0000\u0000\u00a2*\u0001\u0000\u0000\u0000\u00a3"+
		"\u00a4\u0005(\u0000\u0000\u00a4,\u0001\u0000\u0000\u0000\u00a5\u00a6\u0005"+
		")\u0000\u0000\u00a6.\u0001\u0000\u0000\u0000\u00a7\u00a8\u0005{\u0000"+
		"\u0000\u00a80\u0001\u0000\u0000\u0000\u00a9\u00aa\u0005}\u0000\u0000\u00aa"+
		"2\u0001\u0000\u0000\u0000\u00ab\u00ac\u0005;\u0000\u0000\u00ac4\u0001"+
		"\u0000\u0000\u0000\u00ad\u00ae\u0005,\u0000\u0000\u00ae6\u0001\u0000\u0000"+
		"\u0000\u00af\u00b0\u0005.\u0000\u0000\u00b08\u0001\u0000\u0000\u0000\u00b1"+
		"\u00b2\u0005=\u0000\u0000\u00b2:\u0001\u0000\u0000\u0000\u00b3\u00b5\u0007"+
		"\u0000\u0000\u0000\u00b4\u00b3\u0001\u0000\u0000\u0000\u00b5\u00b6\u0001"+
		"\u0000\u0000\u0000\u00b6\u00b4\u0001\u0000\u0000\u0000\u00b6\u00b7\u0001"+
		"\u0000\u0000\u0000\u00b7\u00be\u0001\u0000\u0000\u0000\u00b8\u00ba\u0005"+
		".\u0000\u0000\u00b9\u00bb\u0007\u0000\u0000\u0000\u00ba\u00b9\u0001\u0000"+
		"\u0000\u0000\u00bb\u00bc\u0001\u0000\u0000\u0000\u00bc\u00ba\u0001\u0000"+
		"\u0000\u0000\u00bc\u00bd\u0001\u0000\u0000\u0000\u00bd\u00bf\u0001\u0000"+
		"\u0000\u0000\u00be\u00b8\u0001\u0000\u0000\u0000\u00be\u00bf\u0001\u0000"+
		"\u0000\u0000\u00bf<\u0001\u0000\u0000\u0000\u00c0\u00c4\u0005\"\u0000"+
		"\u0000\u00c1\u00c3\t\u0000\u0000\u0000\u00c2\u00c1\u0001\u0000\u0000\u0000"+
		"\u00c3\u00c6\u0001\u0000\u0000\u0000\u00c4\u00c5\u0001\u0000\u0000\u0000"+
		"\u00c4\u00c2\u0001\u0000\u0000\u0000\u00c5\u00c7\u0001\u0000\u0000\u0000"+
		"\u00c6\u00c4\u0001\u0000\u0000\u0000\u00c7\u00c8\u0005\"\u0000\u0000\u00c8"+
		">\u0001\u0000\u0000\u0000\u00c9\u00cd\u0007\u0001\u0000\u0000\u00ca\u00cc"+
		"\u0007\u0002\u0000\u0000\u00cb\u00ca\u0001\u0000\u0000\u0000\u00cc\u00cf"+
		"\u0001\u0000\u0000\u0000\u00cd\u00cb\u0001\u0000\u0000\u0000\u00cd\u00ce"+
		"\u0001\u0000\u0000\u0000\u00ce@\u0001\u0000\u0000\u0000\u00cf\u00cd\u0001"+
		"\u0000\u0000\u0000\u00d0\u00d1\u0005/\u0000\u0000\u00d1\u00d2\u0005/\u0000"+
		"\u0000\u00d2\u00d6\u0001\u0000\u0000\u0000\u00d3\u00d5\b\u0003\u0000\u0000"+
		"\u00d4\u00d3\u0001\u0000\u0000\u0000\u00d5\u00d8\u0001\u0000\u0000\u0000"+
		"\u00d6\u00d4\u0001\u0000\u0000\u0000\u00d6\u00d7\u0001\u0000\u0000\u0000"+
		"\u00d7\u00d9\u0001\u0000\u0000\u0000\u00d8\u00d6\u0001\u0000\u0000\u0000"+
		"\u00d9\u00da\u0006 \u0000\u0000\u00daB\u0001\u0000\u0000\u0000\u00db\u00dc"+
		"\u0005/\u0000\u0000\u00dc\u00dd\u0005*\u0000\u0000\u00dd\u00e1\u0001\u0000"+
		"\u0000\u0000\u00de\u00e0\t\u0000\u0000\u0000\u00df\u00de\u0001\u0000\u0000"+
		"\u0000\u00e0\u00e3\u0001\u0000\u0000\u0000\u00e1\u00e2\u0001\u0000\u0000"+
		"\u0000\u00e1\u00df\u0001\u0000\u0000\u0000\u00e2\u00e4\u0001\u0000\u0000"+
		"\u0000\u00e3\u00e1\u0001\u0000\u0000\u0000\u00e4\u00e5\u0005*\u0000\u0000"+
		"\u00e5\u00e6\u0005/\u0000\u0000\u00e6\u00e7\u0001\u0000\u0000\u0000\u00e7"+
		"\u00e8\u0006!\u0000\u0000\u00e8D\u0001\u0000\u0000\u0000\u00e9\u00eb\u0007"+
		"\u0004\u0000\u0000\u00ea\u00e9\u0001\u0000\u0000\u0000\u00eb\u00ec\u0001"+
		"\u0000\u0000\u0000\u00ec\u00ea\u0001\u0000\u0000\u0000\u00ec\u00ed\u0001"+
		"\u0000\u0000\u0000\u00ed\u00ee\u0001\u0000\u0000\u0000\u00ee\u00ef\u0006"+
		"\"\u0000\u0000\u00efF\u0001\u0000\u0000\u0000\u00f0\u00f1\t\u0000\u0000"+
		"\u0000\u00f1H\u0001\u0000\u0000\u0000\t\u0000\u00b6\u00bc\u00be\u00c4"+
		"\u00cd\u00d6\u00e1\u00ec\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}